/*
 * File: app/controller/HrController.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('byzCorp.controller.HrController', {
    extend: 'BaseController',

    views: [
        'hrSaveOrUpdate'
    ],

    control: {
        "#btnHrSaveOrUpdateWindow": {
            click: 'onBtnHrSaveOrUpdateWindowClick'
        },
        "#employeeTabPanel": {
            tabchange: 'onEmployeeTabPanelTabChange'
        },
        "#btnHrSaveOrUpdate": {
            click: 'onBtnHrSaveOrUpdateClick'
        },
        "#employeeLeaveGrid": {
            rowclick: 'onEmployeeLeaveGridRowClick'
        },
        "#recordTypeId": {
            change: 'onRecordTypeIdChange'
        }
    },

    onBtnHrSaveOrUpdateWindowClick: function(button, e, eOpts) {
        var winHrSaveOrUpdate = Ext.create('byzCorp.view.hrSaveOrUpdate',{
            title: button.text,
            xtype:'panel',
            iconCls:button.iconCls,
            closable: true,
        });
        var scope = this;
        var hrGridSelected = Ext.getCmp("hrGrid").getSelectionModel().getSelection();
        if(hrGridSelected.length==0){
            winHrSaveOrUpdate.show();
        }else{
            winHrSaveOrUpdate.show();
            Ext.getCmp('employeeSubInfoWest').getForm().setValues(hrGridSelected[0].data);
            Ext.getCmp('employeeSubInfoEast').getForm().setValues(hrGridSelected[0].data);
            Ext.getCmp('employeeSubInfoCenter').getForm().setValues(hrGridSelected[0].data);
            Ext.getCmp('employeeInfoWest').getForm().setValues(hrGridSelected[0].data);
            Ext.getCmp('employeeInfoEast').getForm().setValues(hrGridSelected[0].data);
            Ext.getCmp('employeeInfoCenter').getForm().setValues(hrGridSelected[0].data);
           }
    },

    onEmployeeTabPanelTabChange: function(tabPanel, newCard, oldCard, eOpts) {
        debugger;
        var userId = Ext.getCmp('hrGrid').getSelectionModel().getSelected().items[0].data.userId;
        if((tabPanel.getActiveTab().getId()!='employeeInfo')){
           Ext.getCmp(tabPanel.getActiveTab().getId()+'Grid').getStore().load({
            params:{
                userId : userId
            }
        });
        }
    },

    onBtnHrSaveOrUpdateClick: function(button, e, eOpts) {
        var scope = this;
        var activeTabId = Ext.getCmp('employeeTabPanel').getActiveTab().id;
        if(activeTabId=='employeeInfo'){
            Ext.Ajax.request({
            url:'/byzCorp/hr/saveOrUpdateEmployee',
            params : {
                subInfoWest : Ext.encode(Ext.getCmp('employeeSubInfoWest').getForm().getValues()),
                subInfoEast : Ext.encode(Ext.getCmp('employeeSubInfoEast').getForm().getValues()),
                subInfoCenter :Ext.encode(Ext.getCmp('employeeSubInfoCenter').getForm().getValues()),
                infoWest : Ext.encode(Ext.getCmp('employeeInfoWest').getForm().getValues()),
                infoEast : Ext.encode(Ext.getCmp('employeeInfoEast').getForm().getValues()),
                infoCenter : Ext.encode(Ext.getCmp('employeeInfoCenter').getForm().getValues())
            },
            success : function(response){
                var jsonData = Ext.util.JSON.decode(response.responseText.trim());
                if(jsonData.success){debugger;
                scope.showSuccessMessage();
                Ext.getCmp("managerId").focus();
                Ext.getCmp('hrGrid').getStore().load();
                }else{
                    scope.showErrorMessage(jsonData.message);
                    Ext.getCmp("managerId").focus();
                }
            },
            failure: function (response) {
                var jsonData = Ext.util.JSON.decode(response.responseText.trim());
                scope.showErrorMessage(jsonData.message);
                Ext.getCmp("managerId").focus();
            }
        });
        }

    },

    onEmployeeLeaveGridRowClick: function(tableview, record, element, rowIndex, e, eOpts) {
        debugger;
        if(record.data.recordTypeId==1){
            Ext.getCmp("reportTypeId").setVisible(false);
            Ext.getCmp("leaveTypeId").setVisible(true);
            Ext.getCmp("leaveYear").setVisible(true);
        }else{
            Ext.getCmp("reportTypeId").setVisible(true);
            Ext.getCmp("leaveTypeId").setVisible(false);
            Ext.getCmp("leaveYear").setVisible(false);
        }
        Ext.getCmp("leaveSaveOrUpdateForm").getForm().setValues(record.data);
    },

    onRecordTypeIdChange: function(field, newValue, oldValue, eOpts) {
        debugger;
        if(newValue==1){
            Ext.getCmp("leaveTypeId").setVisible(true);
            Ext.getCmp("leaveYear").setVisible(true);
            Ext.getCmp("reportTypeId").setVisible(false);
        }else{
            Ext.getCmp("leaveTypeId").setVisible(false);
            Ext.getCmp("leaveYear").setVisible(false);
            Ext.getCmp("reportTypeId").setVisible(true);
        }
    }

});
